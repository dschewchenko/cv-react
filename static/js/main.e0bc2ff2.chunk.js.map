{"version":3,"sources":["pages/profile/ava.jpg","store/actions/skills.ts","store/reducers/skills.ts","store/actions/experience.ts","store/reducers/experience.ts","store/reducers/index.ts","pages/profile/Profile.tsx","pages/experience/ExperienceItem.tsx","pages/experience/Experience.tsx","pages/skills/SkillItem.tsx","pages/skills/Skills.tsx","pages/contacts/Contacts.tsx","navigation/Navigation.tsx","footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx","store/index.ts"],"names":["module","exports","__webpack_require__","p","REQUEST_SKILLS","RECEIVE_SKILLS","fetchSkills","dispatch","type","axios","get","concat","process","then","_ref","data","items","initialState","isFetching","REQUEST_EXPERIENCE","RECEIVE_EXPERIENCE","rootReducer","combineReducers","skills","state","arguments","length","undefined","action","Object","assign","experience","Profile","react_default","a","createElement","className","src","ava","alt","Link","to","Component","ExperienceItem","this","props","company","position","dateStart","dateEnd","description","dateString","map","item","i","key","Experience","getState","shouldFetch","renderItems","ExperienceItem_ExperienceItem","connect","SkillItem","skill","title","stars","makeCompetency","Array","fill","_val","Skills","SkillItem_SkillItem","Contacts","href","Navigation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","debouncedHandleScroll","isScrolled","debounce","handleScroll","bind","assertThisInitialized","window","addEventListener","removeEventListener","scrollTop","pageYOffset","document","documentElement","setState","NavLink","exact","Footer","App","BrowserRouter","basename","Navigation_Navigation","Switch","Route","path","component","render","Footer_Footer","Boolean","location","hostname","match","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0bc2ff2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ava.f325a44d.jpg\";","import { Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport { Skill, SkillsState } from \"../reducers/skills\";\n\nexport const REQUEST_SKILLS = \"REQUEST_SKILLS\";\nexport const RECEIVE_SKILLS = \"RECEIVE_SKILLS\";\n\nfunction request() {\n  return {\n    type: REQUEST_SKILLS\n  };\n}\n\nfunction receive(items: Skill[]) {\n  return {\n    type: RECEIVE_SKILLS,\n    items\n  };\n}\n\nfunction fetchSkills(): any {\n  return (dispatch: Dispatch) => {\n    dispatch(request());\n    return axios\n      .get(`${process.env.PUBLIC_URL}/skills.json`)\n      .then(({ data }) => dispatch(receive(data)));\n  };\n}\n\nfunction shouldFetch(skills: SkillsState) {\n  if (!skills) {\n    return true;\n  }\n\n  if (skills.isFetching) {\n    return false;\n  }\n\n  return !skills.items.length;\n}\n\nexport function fetchIfNeeded(): any {\n  return (dispatch: Dispatch, getState: () => any) => {\n    const { skills } = getState();\n    if (shouldFetch(skills)) {\n      return dispatch(fetchSkills());\n    }\n\n    return false;\n  };\n}\n","import { AnyAction } from \"redux\";\nimport { REQUEST_SKILLS, RECEIVE_SKILLS } from \"../actions/skills\";\n\nconst initialState: SkillsState = {\n  isFetching: false,\n  items: []\n};\n\nexport default function SkillsReducer(\n  state: SkillsState = initialState,\n  action: AnyAction\n) {\n  switch (action.type) {\n    case REQUEST_SKILLS:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case RECEIVE_SKILLS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        items: action.items\n      });\n    default:\n      return state;\n  }\n}\n\nexport interface SkillsState {\n  isFetching: boolean;\n  items: Skill[];\n}\n\nexport interface Skill {\n  title: string;\n  description: string;\n  stars: number;\n}\n","import { Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport { Experience, ExperienceState } from \"../reducers/experience\";\n\nexport const REQUEST_EXPERIENCE = \"REQUEST_EXPERIENCE\";\nexport const RECEIVE_EXPERIENCE = \"RECEIVE_EXPERIENCE\";\n\nfunction request() {\n  return {\n    type: REQUEST_EXPERIENCE\n  };\n}\n\nfunction receive(items: Experience[]) {\n  return {\n    type: RECEIVE_EXPERIENCE,\n    items\n  };\n}\n\nfunction fetchSkills(): any {\n  return (dispatch: Dispatch) => {\n    dispatch(request());\n    return axios\n      .get(`${process.env.PUBLIC_URL}/experience.json`)\n      .then(({ data }) => dispatch(receive(data)));\n  };\n}\n\nfunction shouldFetch(experience: ExperienceState) {\n  if (!experience) {\n    return true;\n  }\n\n  if (experience.isFetching) {\n    return false;\n  }\n\n  return !experience.items.length;\n}\n\nexport function fetchIfNeeded(): any {\n  return (dispatch: Dispatch, getState: () => any) => {\n    const { experience } = getState();\n    if (shouldFetch(experience)) {\n      return dispatch(fetchSkills());\n    }\n\n    return false;\n  };\n}\n","import { AnyAction } from \"redux\";\nimport { REQUEST_EXPERIENCE, RECEIVE_EXPERIENCE } from \"../actions/experience\";\n\nconst initialState: ExperienceState = {\n  isFetching: false,\n  items: []\n};\n\nexport default function ExperienceReducer(\n  state: ExperienceState = initialState,\n  action: AnyAction\n) {\n  switch (action.type) {\n    case REQUEST_EXPERIENCE:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case RECEIVE_EXPERIENCE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        items: action.items\n      });\n    default:\n      return state;\n  }\n}\n\nexport interface ExperienceState {\n  isFetching: boolean;\n  items: Experience[];\n}\n\nexport interface Experience {\n  company: string;\n  position: string;\n  dateStart: string;\n  dateEnd: string;\n  description: string[];\n}\n","import { combineReducers } from \"redux\";\nimport SkillsReducer from \"./skills\";\nimport ExperienceReducer from \"./experience\";\n\nconst rootReducer = combineReducers({\n  skills: SkillsReducer,\n  experience: ExperienceReducer\n});\n\nexport default rootReducer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Profile.scss\";\nimport ava from \"./ava.jpg\";\n\nexport default class Profile extends Component {\n  public render() {\n    return (\n      <div className=\"profile container\">\n        <img className=\"profile__img\" src={ava} alt=\"\" />\n        <h1>Dmytro Shevchenko</h1>\n        <h2>Frontend Team Lead</h2>\n        <p>\n          I&apos;m Frontend developer with 6+ years of experience in IT\n          industry. I&apos;m contributing a bit in open source. Have good\n          experience in Backend development. I like to optimize frontend and\n          develop fast applications, can achieve 100% in Google Page Speed\n          Insights. I&apos;m married and have a beautiful daughter\n        </p>\n        <Link to=\"/experience\">Show experience</Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Experience.scss\";\nimport { Experience } from \"../../store/reducers/experience\";\n\nexport default class ExperienceItem extends Component<ExperienceItemProps> {\n  public render() {\n    const { experience } = this.props;\n    const { company, position, dateStart, dateEnd, description } = experience;\n    const dateString = `${dateStart} - ${dateEnd}`;\n    return (\n      <div className=\"experience__list__item\">\n        <h3>{position}</h3>\n        <h5>{dateString}</h5>\n        <h4>{company}</h4>\n        <ul>\n          {description.map((item, i) => (\n            <li key={i}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\ninterface ExperienceItemProps {\n  experience: Experience;\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Store } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  ExperienceState,\n  Experience as ExperienceI\n} from \"../../store/reducers/experience\";\nimport { AppState } from \"../../store\";\nimport \"./Experience.scss\";\nimport ExperienceItem from \"./ExperienceItem\";\nimport { fetchIfNeeded } from \"../../store/actions/experience\";\n\nclass Experience extends Component<ExperienceProps> {\n  public componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchIfNeeded());\n  }\n\n  private static renderItems(items: ExperienceI[]) {\n    if (items.length) {\n      return items.map(item => (\n        <ExperienceItem experience={item} key={item.dateStart} />\n      ));\n    }\n\n    return \"\";\n  }\n\n  public render() {\n    const { experience } = this.props;\n    const { isFetching, items } = experience;\n    return (\n      <div className=\"experience container\">\n        <h1>Work Experience</h1>\n        {isFetching && items.length === 0 && <h2>Loading...</h2>}\n        {!isFetching && items.length === 0 && <h2>Empty</h2>}\n        <div className=\"experience__list\">{Experience.renderItems(items)}</div>\n\n        <Link to=\"/skills\">Show skills</Link>\n      </div>\n    );\n  }\n}\n\ninterface ExperienceProps extends Store {\n  experience: ExperienceState;\n}\n\nconst mapStateToProps = (state: AppState) => ({ experience: state.experience });\n\nexport default connect(mapStateToProps)(Experience);\n","import React, { Component } from \"react\";\nimport \"./Skills.scss\";\nimport { Skill } from \"../../store/reducers/skills\";\n\nexport default class SkillItem extends Component<SkillItemProps> {\n  private static makeCompetency(stars: number) {\n    return new Array(10)\n      .fill(0)\n      .map((_val, i) => (\n        <li\n          className={`competency__list__item ${\n            i < stars ? \"competency__list__item_filled\" : \"\"\n          }`}\n          key={i}\n        />\n      ));\n  }\n\n  public render() {\n    const { skill } = this.props;\n    const { title, description, stars } = skill;\n    return (\n      <div className=\"skills__list__item\">\n        <h3>{title}</h3>\n        <ul className=\"competency__list\">{SkillItem.makeCompetency(stars)}</ul>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}\n\ninterface SkillItemProps {\n  skill: Skill;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Store } from \"redux\";\nimport { Link } from \"react-router-dom\";\nimport { AppState } from \"../../store\";\nimport { fetchIfNeeded } from \"../../store/actions/skills\";\nimport { SkillsState, Skill } from \"../../store/reducers/skills\";\nimport SkillItem from \"./SkillItem\";\nimport \"./Skills.scss\";\n\nclass Skills extends Component<SkillsProps> {\n  public componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchIfNeeded());\n  }\n\n  private static renderItems(items: Skill[]) {\n    if (items.length) {\n      return items.map(item => <SkillItem skill={item} key={item.title} />);\n    }\n\n    return \"\";\n  }\n\n  public render() {\n    const { skills } = this.props;\n    const { isFetching, items } = skills;\n    return (\n      <div className=\"skills container\">\n        <h1>Skills</h1>\n        {isFetching && items.length === 0 && <h2>Loading...</h2>}\n        {!isFetching && items.length === 0 && <h2>Empty</h2>}\n        <div className=\"skills__list\">{Skills.renderItems(items)}</div>\n\n        <Link to=\"/contacts\">Show contacts</Link>\n      </div>\n    );\n  }\n}\n\ninterface SkillsProps extends Store {\n  skills: SkillsState;\n}\n\nconst mapStateToProps = (state: AppState) => ({ skills: state.skills });\n\nexport default connect(mapStateToProps)(Skills);\n","import React, { Component } from \"react\";\nimport \"./Contacts.scss\";\n\nexport default class Contacts extends Component {\n  public render() {\n    return (\n      <div className=\"contacts container\">\n        <h1>Contacts</h1>\n\n        <div className=\"contacts__list\">\n          <div className=\"contacts__list__item\">\n            <h3>Email</h3>\n            <p>\n              <a href=\"mailto:dschewchenko@gmail.com\">dschewchenko@gmail.com</a>\n            </p>\n          </div>\n          <div className=\"contacts__list__item\">\n            <h3>LinkedIn</h3>\n            <p>\n              <a href=\"https://www.linkedin.com/in/dschewchenko\">\n                linkedin.com/in/dschewchenko\n              </a>\n            </p>\n          </div>\n          <div className=\"contacts__list__item\">\n            <h3>GitHub</h3>\n            <p>\n              <a href=\"https://github.com/dschewchenko\">\n                github.com/dschewchenko\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport debounce from \"lodash/debounce\";\nimport \"./Navigation.scss\";\n\nexport default class Navigation extends Component<{}, NavigationState> {\n  public constructor(props: any) {\n    super(props);\n    this.state = { isScrolled: false };\n    this.debouncedHandleScroll = debounce(this.handleScroll, 50).bind(this);\n  }\n\n  public componentDidMount() {\n    this.handleScroll();\n    window.addEventListener(\"scroll\", this.debouncedHandleScroll, true);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.debouncedHandleScroll, true);\n  }\n\n  private debouncedHandleScroll: any;\n\n  private handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    this.setState({ isScrolled: scrollTop > 0 });\n  }\n\n  public render() {\n    let className = \"navigation\";\n    const { isScrolled } = this.state;\n    if (isScrolled) {\n      className += \" navigation_scrolled\";\n    }\n    return (\n      <header className={className}>\n        <NavLink exact to=\"/\" className=\"navigation__link\">\n          Profile\n        </NavLink>\n        <NavLink to=\"/experience\" className=\"navigation__link\">\n          Experience\n        </NavLink>\n        <NavLink to=\"/skills\" className=\"navigation__link\">\n          Skills\n        </NavLink>\n        <NavLink to=\"/contacts\" className=\"navigation__link\">\n          Contacts\n        </NavLink>\n      </header>\n    );\n  }\n}\n\ninterface NavigationState {\n  isScrolled: boolean;\n}\n","import React, { Component } from \"react\";\nimport \"./Footer.scss\";\n\nexport default class Footer extends Component {\n  public render() {\n    return (\n      <footer className=\"footer\">\n        <span>©2019 dschewchenko</span>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Profile from \"./pages/profile/Profile\";\nimport Experience from \"./pages/experience/Experience\";\nimport Skills from \"./pages/skills/Skills\";\nimport Contacts from \"./pages/contacts/Contacts\";\nimport Navigation from \"./navigation/Navigation\";\nimport Footer from \"./footer/Footer\";\n\nexport default class App extends Component {\n  public render() {\n    return (\n      <Router basename=\"/cv-react\">\n        <div className=\"app\">\n          <Navigation />\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={Profile} />\n              <Route exact path=\"/experience\" component={Experience} />\n              <Route exact path=\"/skills\" component={Skills} />\n              <Route exact path=\"/contacts\" component={Contacts} />\n              <Route\n                render={() => (\n                  <div className=\"not-found container\">\n                    <h1>Page Not Found</h1>\n                    <p>\n                      <Link to=\"/\">Back to main page</Link>\n                    </p>\n                  </div>\n                )}\n              />\n            </Switch>\n          </main>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration: ServiceWorkerRegistration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport configureStore from \"./store\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunkMiddleware));\n}\n\nexport type AppState = ReturnType<typeof rootReducer>;\n"],"sourceRoot":""}